apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "huginn.fullname" . }}-agent-runner
  labels:
    {{- include "huginn.labels" . | nindent 4 }}
    app.kubernetes.io/component: agent-runner
spec:
  replicas: {{ .Values.agentRunner.replicaCount }}
  selector:
    matchLabels:
      {{- include "huginn.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: agent-runner
  template:
    metadata:
      labels:
        {{- include "huginn.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: agent-runner
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "huginn.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          command: [ "/scripts/init" ]
          args: [ "bin/agent_runner.rb" ]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          env:
            {{ with .Values.postgresql }}
            - name: HUGINN_DATABASE_NAME
              value: "{{ .postgresqlDatabase }}"
            - name: HUGINN_DATABASE_USERNAME
              value: "{{ .postgresqlUsername }}"
            - name: HUGINN_DATABASE_PASSWORD
              value: "{{ .postgresqlPassword }}"
            {{ end }}
            - name: DATABASE_ADAPTER
              value: postgresql
            - name: DATABASE_HOST
              value: "{{ .Release.Name }}-postgresql"
            - name: DATABASE_PORT
              value: "5432"
            - name: INVITATION_CODE
              value: "{{ .Values.invitationCode }}"
            - name: SMTP_DOMAIN
              value: "{{ .Values.smtp.domain }}"
            - name: SMTP_USER_NAME
              value: "{{ .Values.smtp.username }}"
            - name: SMTP_PASSWORD
              value: "{{ .Values.smtp.password }}"
            - name: SMTP_SERVER
              value: "{{ .Values.smtp.server }}"
            - name: SMTP_PORT
              value: "{{ .Values.smtp.port }}"
            - name: SMTP_AUTHENTICATION
              value: "{{ .Values.smtp.authentication }}"
            - name: SMTP_ENABLE_STARTTLS_AUTO
              value: "{{ .Values.smtp.enableStartttlAuto }}"
            - name: EMAIL_FROM_ADDRESS
              value: "{{ .Values.emailFromAddress }}"
            - name: TWITTER_OAUTH_KEY
              value: "{{ .Values.oauth.twitterOauthKey }}"
            - name: TWITTER_OAUTH_SECRET
              value: "{{ .Values.oauth.twitterOauthSecret }}"
            - name: GITHUB_OAUTH_KEY
              value: "{{ .Values.oauth.githubOauthKey }}"
            - name: GITHUB_OAUTH_SECRET
              value: "{{ .Values.oauth.githubOauthSecret }}"
            # - name: REQUIRE_CONFIRMED_EMAIL
            #   value: "{{ .Values.requireConfirmedEmail }}"
            # - name: ALLOW_UNCONFIRMED_ACCESS_FOR
            #   value: "{{ .Values.allowUnconfirmedAccessFor }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # livenessProbe:
          #   httpGet:
          #     path: /about
          #     port: http
          #   initialDelaySeconds: 300
          #   periodSeconds: 30
          # readinessProbe:
          #   httpGet:
          #     path: /about
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
